import Head from "next/head";
import Navigation from "./navigation";
import { useState } from "react";
import Alert from "./alert";
import { useWeb3Wallet, WalletInfo } from "../context/Web3WalletContext";
import {
  useMetamask,
  useWalletConnect,
  useAddress,
  useChainId,
  useDisconnect,
  useNetwork
} from "@thirdweb-dev/react";

interface Props {
  children?: React.ReactNode
}
const Layout = ({ children }: Props) => {
  // STATE
  const [alert, setAlert] = useState({ type: "success", message: "test" });
  const wallet_context = useWeb3Wallet()

  const initial_wallet_info: WalletInfo = {
    connectedWallet: {
      address: useAddress(),
      chainId: useChainId(),
      network: useNetwork()?.[0].data.chain?.name

    },
    walletDisconnect: useDisconnect(),
    walletConnectors: {
      "meta_mask": useMetamask(),
      "wallet_connect": useWalletConnect()
    }
  }

  // wallet_context?.set_wallet_info(initial_wallet_info)

  return (
    <>
      <Head>
        <title>NextWind</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navigation handleAlert={setAlert} />
      <main className="mx-auto">
        {/* use <section> tags in page level to seperate content */}
        {children}
        {/* EXAMPLE CONTENT STRUCTURE - section > div.container  */}
        <section>
          {
            wallet_context &&
            <div className="container mx-auto">
              {wallet_context?.wallet_info?.connectedWallet.address && <p>address: {wallet_context.wallet_info?.connectedWallet.address}</p>}
              {wallet_context?.wallet_info?.connectedWallet.chainId && <p>chainId: {wallet_context.wallet_info?.connectedWallet.chainId}</p>}
              {wallet_context?.wallet_info?.connectedWallet.network && <p>network: {wallet_context.wallet_info?.connectedWallet.network}</p>}
              {/* {message && <p>STATUS MESSAGE: {message}</p>} */}
            </div>
          }
        </section>
        {alert && <Alert type={alert.type} message={alert.message} />}
      </main>
    </>
  );
};

export default Layout;
